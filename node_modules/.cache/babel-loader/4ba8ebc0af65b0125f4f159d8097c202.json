{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/neeraj/calender-note/src/Components/CalenderComponent.js\";\nimport \"rc-calendar/assets/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FullCalendar from \"rc-calendar/lib/FullCalendar\";\nimport \"rc-select/assets/index.css\";\nimport Select from \"rc-select\";\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\nimport enUS from \"rc-calendar/lib/locale/en_US\";\nimport moment from \"moment\";\nimport \"moment/locale/zh-cn\";\nimport \"moment/locale/en-gb\";\nconst format = \"YYYY-MM-DD\";\nconst cn = location.search.indexOf(\"cn\") !== -1;\nconst now = moment();\n\nif (cn) {\n  now.locale(\"zh-cn\").utcOffset(8);\n} else {\n  now.locale(\"en-gb\").utcOffset(0);\n}\n\nconst defaultCalendarValue = now.clone();\ndefaultCalendarValue.add(-1, \"month\");\n\nfunction onSelect(value) {\n  console.log(\"select\", value.format(format));\n}\n\nclass Demo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      type: \"month\"\n    };\n\n    this.onTypeChange = type => {\n      this.setState({\n        type\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: 1000,\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n        style: {\n          margin: 10\n        },\n        Select: Select,\n        fullscreen: false,\n        onSelect: onSelect,\n        defaultValue: now,\n        locale: cn ? zhCN : enUS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n        style: {\n          margin: 10\n        },\n        Select: Select,\n        fullscreen: true,\n        defaultValue: now,\n        onSelect: onSelect,\n        type: this.state.type,\n        onTypeChange: this.onTypeChange,\n        locale: cn ? zhCN : enUS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 17\n}, this), document.getElementById(\"__react-content\")); // import React from \"react\";\n// import Calendar from \"react-calendar\";\n// import moment from \"moment\";\n// import FullCalendar from 'rc-calendar/lib/FullCalendar';\n// class CalenderComponentClass extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     const myEvents = JSON.parse(localStorage.getItem(\"myEvents\"));\n//     this.state = {\n//       calenderDate: new Date(),\n//       myEvents,\n//       eventValue: \"\",\n//       addEvent: false,\n//       myEventData: [],\n//     };\n//   }\n//   handleChangeDate = (value, event) => {\n//     var currentDate = moment(new Date()).format(\"l\");\n//     var eventDate = moment(value).format(\"l\");\n//     console.log(currentDate);\n//     console.log(eventDate);\n//     console.log(currentDate == eventDate);\n//     console.log(value);\n//     console.log(this.state.myEvents);\n//     this.setState({ calenderDate: value, addEvent: true });\n//   };\n//   handleChange = (name) => (event) => {\n//     this.setState({\n//       eventValue: event.target.value,\n//     });\n//   };\n//   saveData = () => {\n//     var data = {\n//       [moment(this.state.calenderDate).format(\"l\")]: [this.state.eventValue],\n//     };\n//     console.log(data);\n//     let myEventData = [];\n//     myEventData.push(data);\n//     if (this.state.myEvents === null) localStorage.setItem(\"myEvents\", JSON.stringify(data));\n//     else {\n//       console.log(\"else\");\n//       console.log(this.state.myEvents);\n//       Object.keys(this.state.myEvents).map((singleEventDate) => {\n//         console.log(singleEventDate);\n//         console.log(this.state.eventValue);\n//         console.log(this.state.calenderDate);\n//         console.log(moment(this.state.calenderDate).format(\"l\"));\n//         if (singleEventDate === moment(this.state.calenderDate).format(\"l\")) {\n//           console.log(\"if\");\n//           console.log(this.state.myEvents);\n//           var myEventValueData = Object.values(this.state.myEvents);\n//           console.log(myEventValueData);\n//           console.log(myEventValueData.push(this.state.eventValue));\n//           this.setState({ myEvents: myEventValueData.push(this.state.eventValue) }, () => {\n//             console.log(this.state.myEvents);\n//             localStorage.setItem(\"myEvents\", JSON.stringify(this.state.myEvents));\n//           });\n//         }\n//       });\n//       //   console.log(currentDate == eventDate);\n//     }\n//   };\n//   render() {\n//     return (\n//       <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\" }}>\n//         <div>\n//           <Calendar\n//             // minDate={new Date()}\n//             showNavigation={false}\n//             showNeighboringMonth={false}\n//             activeStartDate={new Date()}\n//             style={{ height: \"40vh\", width: \"40vh\" }}\n//             allowPartialRange={true}\n//             onChange={(value, event) => this.handleChangeDate(value, event)}\n//             // activeStartDate={new Date(2021, 1, 1)}\n//             // defaultActiveStartDate={new Date(2021, 1, 1)}\n//             defaultValue={new Date()}\n//             value={this.state.calenderDate}\n//           />\n//         </div>\n//         {this.state.addEvent ? (\n//           <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n//             <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n//               <input\n//                 style={{ marginTop: \"10%\", width: \"45vh\", height: \"30px\", marginRight: \"4%\" }}\n//                 type=\"text\"\n//                 id=\"eventValue\"\n//                 name=\"eventValue\"\n//                 placeholder=\"Add Your Event\"\n//                 value={this.state.eventValue}\n//                 onChange={this.handleChange(\"eventValue\")}\n//               />\n//               <div\n//                 style={{\n//                   borderRadius: \"50%\",\n//                   border: \"1px solid blue\",\n//                   display: \"flex\",\n//                   justifyContent: \"center\",\n//                   alignItems: \"center\",\n//                   width: \"30px\",\n//                   height: \"30px\",\n//                   color: \"blue\",\n//                 }}\n//                 onClick={() => this.saveData()}\n//               >\n//                 +\n//               </div>\n//             </div>\n//             {/* <input\n//               style={{ height: \"5vh\", width: \"20vh\", marginTop: \"6%\" }}\n//               type=\"submit\"\n//               value=\"Save\"\n//               onClick={() => this.saveData()}\n//             /> */}\n//           </div>\n//         ) : (\n//           \"\"\n//         )}\n//       </div>\n//     );\n//   }\n// }\n// export default CalenderComponentClass;","map":{"version":3,"sources":["/home/neeraj/calender-note/src/Components/CalenderComponent.js"],"names":["React","ReactDOM","FullCalendar","Select","zhCN","enUS","moment","format","cn","location","search","indexOf","now","locale","utcOffset","defaultCalendarValue","clone","add","onSelect","value","console","log","Demo","Component","state","type","onTypeChange","setState","render","zIndex","position","margin","document","getElementById"],"mappings":";;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,4BAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,qBAAP;AACA,OAAO,qBAAP;AAEA,MAAMC,MAAM,GAAG,YAAf;AACA,MAAMC,EAAE,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,OAAhB,CAAwB,IAAxB,MAAkC,CAAC,CAA9C;AAEA,MAAMC,GAAG,GAAGN,MAAM,EAAlB;;AACA,IAAIE,EAAJ,EAAQ;AACNI,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX,EAAoBC,SAApB,CAA8B,CAA9B;AACD,CAFD,MAEO;AACLF,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX,EAAoBC,SAApB,CAA8B,CAA9B;AACD;;AAED,MAAMC,oBAAoB,GAAGH,GAAG,CAACI,KAAJ,EAA7B;AACAD,oBAAoB,CAACE,GAArB,CAAyB,CAAC,CAA1B,EAA6B,OAA7B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAK,CAACZ,MAAN,CAAaA,MAAb,CAAtB;AACD;;AAED,MAAMe,IAAN,SAAmBtB,KAAK,CAACuB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE;AADA,KADyB;;AAAA,SAKjCC,YALiC,GAKjBD,IAAD,IAAU;AACvB,WAAKE,QAAL,CAAc;AACZF,QAAAA;AADY,OAAd;AAGD,KATgC;AAAA;;AAWjCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,IAAV;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAZ;AAAA,8BACE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SADT;AAEE,QAAA,MAAM,EAAE5B,MAFV;AAGE,QAAA,UAAU,EAAE,KAHd;AAIE,QAAA,QAAQ,EAAEe,QAJZ;AAKE,QAAA,YAAY,EAAEN,GALhB;AAME,QAAA,MAAM,EAAEJ,EAAE,GAAGJ,IAAH,GAAUC;AANtB;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE;AAAE0B,UAAAA,MAAM,EAAE;AAAV,SADT;AAEE,QAAA,MAAM,EAAE5B,MAFV;AAGE,QAAA,UAAU,MAHZ;AAIE,QAAA,YAAY,EAAES,GAJhB;AAKE,QAAA,QAAQ,EAAEM,QALZ;AAME,QAAA,IAAI,EAAE,KAAKM,KAAL,CAAWC,IANnB;AAOE,QAAA,YAAY,EAAE,KAAKC,YAPrB;AAQE,QAAA,MAAM,EAAElB,EAAE,GAAGJ,IAAH,GAAUC;AARtB;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAlCgC;;AAqCnCJ,QAAQ,CAAC2B,MAAT,eAAgB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA0BI,QAAQ,CAACC,cAAT,CAAwB,iBAAxsourcesContent":["import \"rc-calendar/assets/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport FullCalendar from \"rc-calendar/lib/FullCalendar\";\n\nimport \"rc-select/assets/index.css\";\nimport Select from \"rc-select\";\n\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\nimport enUS from \"rc-calendar/lib/locale/en_US\";\n\nimport moment from \"moment\";\nimport \"moment/locale/zh-cn\";\nimport \"moment/locale/en-gb\";\n\nconst format = \"YYYY-MM-DD\";\nconst cn = location.search.indexOf(\"cn\") !== -1;\n\nconst now = moment();\nif (cn) {\n  now.locale(\"zh-cn\").utcOffset(8);\n} else {\n  now.locale(\"en-gb\").utcOffset(0);\n}\n\nconst defaultCalendarValue = now.clone();\ndefaultCalendarValue.add(-1, \"month\");\n\nfunction onSelect(value) {\n  console.log(\"select\", value.format(format));\n}\n\nclass Demo extends React.Component {\n  state = {\n    type: \"month\",\n  };\n\n  onTypeChange = (type) => {\n    this.setState({\n      type,\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ zIndex: 1000, position: \"relative\" }}>\n        <FullCalendar\n          style={{ margin: 10 }}\n          Select={Select}\n          fullscreen={false}\n          onSelect={onSelect}\n          defaultValue={now}\n          locale={cn ? zhCN : enUS}\n        />\n        <FullCalendar\n          style={{ margin: 10 }}\n          Select={Select}\n          fullscreen\n          defaultValue={now}\n          onSelect={onSelect}\n          type={this.state.type}\n          onTypeChange={this.onTypeChange}\n          locale={cn ? zhCN : enUS}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById(\"__react-content\"));\n\n// import React from \"react\";\n// import Calendar from \"react-calendar\";\n// import moment from \"moment\";\n// import FullCalendar from 'rc-calendar/lib/FullCalendar';\n\n// class CalenderComponentClass extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     const myEvents = JSON.parse(localStorage.getItem(\"myEvents\"));\n//     this.state = {\n//       calenderDate: new Date(),\n//       myEvents,\n//       eventValue: \"\",\n//       addEvent: false,\n//       myEventData: [],\n//     };\n//   }\n\n//   handleChangeDate = (value, event) => {\n//     var currentDate = moment(new Date()).format(\"l\");\n//     var eventDate = moment(value).format(\"l\");\n//     console.log(currentDate);\n//     console.log(eventDate);\n//     console.log(currentDate == eventDate);\n//     console.log(value);\n//     console.log(this.state.myEvents);\n//     this.setState({ calenderDate: value, addEvent: true });\n//   };\n\n//   handleChange = (name) => (event) => {\n//     this.setState({\n//       eventValue: event.target.value,\n//     });\n//   };\n\n//   saveData = () => {\n//     var data = {\n//       [moment(this.state.calenderDate).format(\"l\")]: [this.state.eventValue],\n//     };\n//     console.log(data);\n//     let myEventData = [];\n//     myEventData.push(data);\n//     if (this.state.myEvents === null) localStorage.setItem(\"myEvents\", JSON.stringify(data));\n//     else {\n//       console.log(\"else\");\n//       console.log(this.state.myEvents);\n//       Object.keys(this.state.myEvents).map((singleEventDate) => {\n//         console.log(singleEventDate);\n//         console.log(this.state.eventValue);\n//         console.log(this.state.calenderDate);\n//         console.log(moment(this.state.calenderDate).format(\"l\"));\n//         if (singleEventDate === moment(this.state.calenderDate).format(\"l\")) {\n//           console.log(\"if\");\n//           console.log(this.state.myEvents);\n//           var myEventValueData = Object.values(this.state.myEvents);\n//           console.log(myEventValueData);\n//           console.log(myEventValueData.push(this.state.eventValue));\n//           this.setState({ myEvents: myEventValueData.push(this.state.eventValue) }, () => {\n//             console.log(this.state.myEvents);\n//             localStorage.setItem(\"myEvents\", JSON.stringify(this.state.myEvents));\n//           });\n//         }\n//       });\n//       //   console.log(currentDate == eventDate);\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\" }}>\n//         <div>\n//           <Calendar\n//             // minDate={new Date()}\n//             showNavigation={false}\n//             showNeighboringMonth={false}\n//             activeStartDate={new Date()}\n//             style={{ height: \"40vh\", width: \"40vh\" }}\n//             allowPartialRange={true}\n//             onChange={(value, event) => this.handleChangeDate(value, event)}\n//             // activeStartDate={new Date(2021, 1, 1)}\n//             // defaultActiveStartDate={new Date(2021, 1, 1)}\n//             defaultValue={new Date()}\n//             value={this.state.calenderDate}\n//           />\n//         </div>\n//         {this.state.addEvent ? (\n//           <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n//             <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n//               <input\n//                 style={{ marginTop: \"10%\", width: \"45vh\", height: \"30px\", marginRight: \"4%\" }}\n//                 type=\"text\"\n//                 id=\"eventValue\"\n//                 name=\"eventValue\"\n//                 placeholder=\"Add Your Event\"\n//                 value={this.state.eventValue}\n//                 onChange={this.handleChange(\"eventValue\")}\n//               />\n//               <div\n//                 style={{\n//                   borderRadius: \"50%\",\n//                   border: \"1px solid blue\",\n//                   display: \"flex\",\n//                   justifyContent: \"center\",\n//                   alignItems: \"center\",\n//                   width: \"30px\",\n//                   height: \"30px\",\n//                   color: \"blue\",\n//                 }}\n//                 onClick={() => this.saveData()}\n//               >\n//                 +\n//               </div>\n//             </div>\n//             {/* <input\n//               style={{ height: \"5vh\", width: \"20vh\", marginTop: \"6%\" }}\n//               type=\"submit\"\n//               value=\"Save\"\n//               onClick={() => this.saveData()}\n//             /> */}\n//           </div>\n//         ) : (\n//           \"\"\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default CalenderComponentClass;\n"]},"metadata":{},"sourceType":"module"}